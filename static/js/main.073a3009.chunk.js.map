{"version":3,"sources":["layout/Header/index.js","layout/Footer/index.js","pages/Home/index.js","web3/getWeb3.js","web3/getContracts.js","web3/EthersContext.js","pages/TokenList/index.js","utils/localStorage.js","components/forms/DeployNewToken/index.js","pages/Deploy/index.js","components/TokenMeta/index.js","web3/web3Utils.js","components/forms/CreateCertificateType/index.js","components/forms/CreateCertificate/index.js","components/Dropzone/index.js","components/forms/RedeemCertificate/index.js","components/forms/ChooseToken/index.js","pages/Token/index.js","components/forms/CreateLockboxCertificate/index.js","components/forms/RedeemLockboxCertificate/index.js","pages/Lockbox/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","Footer","Home","Component","getWeb3","Promise","resolve","reject","window","addEventListener","a","async","ethereum","console","log","web3","Web3","enable","provider","providers","HttpProvider","getContracts","networkId","exampleCoin","lockbox","ExampleCoinRinkeby","address","networks","LockboxRinkeby","Context","React","createContext","MyWeb3Provider","props","gatherData","bind","state","loaded","gameList","refresh","this","setState","gameEvent","games","ethers","Web3Provider","currentProvider","eth","getAccounts","accounts","getNetwork","network","chainId","signer","getSigner","contracts","exampleCoinJSON","lockboxJSON","exampleCoinFactory","ContractFactory","abi","bytecode","exampleCoinContract","Contract","lockboxContract","setLoaded","alert","error","Provider","value","children","MyWeb3Consumer","Consumer","Dapp","upsertStringToLocalStorageArray","name","localStorage","getItem","array","JSON","parse","includes","push","setItem","stringify","CreateForm","submitTransaction","symbol","decimalUnits","cap","waiting","factory","deploy","contract","deployTransaction","wait","document","getElementById","id","reset","price","showOther","handleChange","handleSubmit","event","target","preventDefault","onSubmit","type","onChange","Admin","DeployNewToken","Token","componentDidMount","loadContract","contractLoaded","loadingMessage","owner","totalSupply","supply","balanceOf","selectedAddress","balance","toString","decodeLogs","logs","contractEventsInterface","result","i","cleaned","decoded","decode","data","topics","inputs","forEach","input","startsWith","x","length","arrayify","utils","isHexAddress","test","bigNumberify","amount","delegateFields","metadata","df","Error","createCertificateType","delegates","notOwner","delegateLength","addNewDelegateField","ownerAddress","toLowerCase","newFields","map","d","fId","key","onClick","disabled","selectedCertificateId","getCertificateHash","recipient","cHash","certHashBytes","signMessage","signature","signedCertificate","certificateId","isCertSigned","certificates","downloadCert","getLogs","filter","filters","CertificateTypeCreated","fromBlock","contractEventInterface","interface","events","decodedLogs","getCertificateData","dataString","cert","meta","getDelegateSelector","blob","Blob","url","URL","createObjectURL","createElement","href","download","click","selectorList","c","idx","Dropzone","hightlight","fileInputRef","createRef","openFileDialog","onFilesAdded","onDragOver","onDragLeave","onDrop","current","evt","addedhightlight","files","fileListToArray","dataTransfer","list","item","style","cursor","ref","alt","src","certJsonTextArea","redeemCertificate","certJson","successfullyUploaded","handleFileDrop","err","file","text","s","json","rows","cols","ChooseToken","selectorTokens","coinABI","selectorTokenChoice","manualToken","afterMount","addToken","tokenAddressArray","t","token","navigate","route","getSelector","getCode","templateAddress","templateCode","tokenAddress","code","TokenMeta","RedeemCertificate","TokenConsumer","tokenId","approvedAmount","gt","approveLockbox","timeNonce","nonce","Date","now","tokenContract","allowance","amt","approve","submitERC20Transaction","submitLockboxTransaction","bnAmount","b","redeem","Lockbox","RedeemLockboxCertificate","App","path","TokenList","Deploy","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.073a3009.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"@reach/router\"\nimport \"./index.css\"\n//import Balance from \"../../components/Balance\"\n\n\nfunction Header() {\n  return (\n\n    <div>\n      <header>\n        <div className=\"header-div\">\n          <Link className=\"nav-item nav-link\" to=\"/\"><button className=\"btn-primary\">Home</button></Link>\n          <Link className=\"nav-item nav-link\" to=\"/deploy\"><button className=\"btn-secondary\">Deploy</button></Link>\n          <Link className=\"nav-item nav-link\" to=\"/token\"><button className=\"btn-secondary\">Token</button></Link>\n          <Link className=\"nav-item nav-link\" to=\"/lockbox\"><button className=\"btn-secondary\">Lockbox</button></Link>\n        </div>\n      </header>\n    </div>\n\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport \"./index.css\"\n\nfunction Footer() {\n  return (\n    <div>\n      <footer>\n        <div className=\"footer-div\">\n          <p className=\"copyright\">\t&copy; Rapid 2020</p>\n        </div>\n      </footer>\n    </div>\n\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\n// import { Link } from \"@reach/router\"\n\n\nclass Home extends Component {\n    render() {\n        return (\n          <div>\n            <h1>Home Page</h1>\n            <h2>Hello and welcome</h2>\n            <p>This is the certificates Dapp, it does x, y and z. Its a pretty cool dapp, I'll explain how it works eventually but for now this filler text will have to suffice.</p>\n          </div>\n        );\n      }\n}\n\nexport default Home;","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        console.log(\"Modern Web3\")\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        console.log(\"Legacy Web3\")\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","\nimport ExampleCoinRinkeby from \"../contracts/rinkeby/ExampleCoin.json\";\nimport LockboxRinkeby from \"../contracts/rinkeby/TokenLockbox.json\";\n\nconst getContracts = (networkId) => {\n    let exampleCoin;\n    let lockbox;\n    if (networkId === 4) {\n        exampleCoin = ExampleCoinRinkeby\n        exampleCoin.address = exampleCoin.networks[4].address\n        lockbox = LockboxRinkeby\n        lockbox.address = lockbox.networks[4].address\n\n    }\n\n    return { exampleCoin, lockbox }\n}\n\nexport default getContracts;\n","import React, { Component } from \"react\";\nimport { ethers } from 'ethers';\n\n\nimport getWeb3 from \"./getWeb3\";\nimport getContracts from \"./getContracts\";\n\n\nconst Context = React.createContext();\n\nexport class MyWeb3Provider extends Component {\n  constructor(props) {\n    super(props);\n    this.gatherData = this.gatherData.bind(this);\n\n    this.state = {\n      loaded: false,\n      gameList: [],\n      refresh: () => { },\n      web3: null\n    }\n  }\n\n  setLoaded() {\n    this.setState({\n      loaded: true\n    })\n  }\n\n  addGameToList(gameEvent) {\n    //let game = event.returned\n    this.setState({\n      games: gameEvent\n    })\n  }\n  async componentDidMount() {\n    this.gatherData()\n  }\n\n  async componentDidUpdate() {\n\n  }\n\n  async gatherData() {\n    try {\n      // Get network provider and web3 instance\n      let web3\n      if (!this.state.web3) {\n        web3 = await getWeb3();\n      } else {\n        web3 = this.state.web3\n      }\n\n      const provider = new ethers.providers.Web3Provider(web3.currentProvider)\n      console.log(provider)\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const network = await provider.getNetwork();\n      const networkId = network.chainId;\n      const signer = provider.getSigner();\n\n      const contracts = getContracts(networkId)\n      const exampleCoinJSON = contracts.exampleCoin\n      const lockboxJSON = contracts.lockbox\n\n      let exampleCoinFactory = new ethers.ContractFactory(exampleCoinJSON.abi, exampleCoinJSON.bytecode, signer);\n      let exampleCoinContract = new ethers.Contract(exampleCoinJSON.address, exampleCoinJSON.abi, signer);\n\n      let lockboxContract = new ethers.Contract(lockboxJSON.address, lockboxJSON.abi, signer);\n\n      this.setState({ web3, provider, signer, networkId, accounts, exampleCoinContract, exampleCoinFactory, lockboxContract }, this.setLoaded);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n\n}\n\nexport const MyWeb3Consumer = Context.Consumer;\n\nexport default Context","import React from \"react\";\nimport { MyWeb3Consumer } from '../../web3/EthersContext';\n\nconst Dapp = (props) => (\n  <MyWeb3Consumer>\n    {({ loaded }) => {\n      if (!loaded) {\n        return (<div>Loading contracts from Context</div>)\n      }\n      return (\n        <div className=\"list-page\">\n          <h1>Token List Page</h1>\n          <div>\n\n          </div>\n        </div>\n      )\n    }}\n  </MyWeb3Consumer>\n);\n\nexport default Dapp;\n","export const upsertStringToLocalStorageArray = (name, value) => {\n    //first see if its empty\n    if (!localStorage.getItem(name)) {\n        console.log(\"local storage empty\")\n        //its empty\n        let array = JSON.stringify([value])\n        localStorage.setItem(name, array)\n    } else {\n        let array = JSON.parse(localStorage.getItem(name))\n        if (array.includes(value)){\n            return\n        }\n        array.push(value)\n        localStorage.setItem(name, JSON.stringify(array)) \n    }\n}\n\nexport const getLocalStorageArray = (name) => {\n    if (!localStorage.getItem(name)){\n        return []\n    }\n    return JSON.parse(localStorage.getItem(name))\n}\n","import React, { Component } from \"react\";\nimport {upsertStringToLocalStorageArray} from \"../../../utils/localStorage\"\nclass CreateForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: null,\n            name: null,\n            symbol: null,\n            decimalUnits: null,\n            cap: null,\n            price: null,\n            showOther: false,\n            waiting: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.submitTransaction()\n    }\n\n    submitTransaction = async () => {\n        const { name, symbol, decimalUnits, cap } = this.state\n\n        this.setState({waiting: true})\n        let contract = await this.props.factory.deploy(name, symbol, decimalUnits, cap)\n         \n        console.log(contract)\n        upsertStringToLocalStorageArray(\"CERTIFICATE_TOKEN_LIST\",contract.address)\n\n        await contract.deployTransaction.wait()\n        this.setState({waiting: false})\n\n        document.getElementById(this.props.id).reset();\n    };\n\n\n    render() {\n        return (\n            <form id={this.props.id} onSubmit={this.handleSubmit}>\n                <label>\n                    Token Name:\n            <input name=\"name\" type=\"text\" onChange={this.handleChange} />\n                </label>\n                <br></br>\n                <label>\n                    Token Symbol:\n            <input name=\"symbol\" type=\"text\" onChange={this.handleChange} />\n                </label>\n                <br></br>\n\n                <label>\n                    Decimal Units:\n            <input name=\"decimalUnits\" type=\"number\" onChange={this.handleChange} />\n                </label>\n                <br></br>\n                <label>\n                    Mint Cap:\n            <input name=\"cap\" type=\"number\" onChange={this.handleChange} />\n                </label>\n                <br></br>\n                {this.state.waiting ? <div>Please Wait While Token Deploys...</div> : <input type=\"submit\" value=\"Submit\" />}\n            </form>\n        );\n    }\n}\nexport default CreateForm;","import React from \"react\";\nimport DeployNewToken from \"../../components/forms/DeployNewToken\"\nimport { MyWeb3Consumer } from \"../../web3/EthersContext\"\n\n\nconst Admin = (props) => (\n    <MyWeb3Consumer>\n        {({ loaded, exampleCoinContract, exampleCoinFactory }) => {\n            if (!loaded) {\n                return (<div>Loading form</div>)\n            }\n            return (\n                <div className=\"admin-page\">\n                    <h1>Admin Page</h1>\n                    <h3>Fill out the form below to create a new token</h3>\n                    <DeployNewToken id=\"new-token-form\" factory={exampleCoinFactory} />\n                </div>\n            )\n        }}\n    </MyWeb3Consumer>\n);\n\n\nexport default Admin;","import React, { Component } from \"react\";\n\nclass Token extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        contractLoaded: false,\n        loadingMessage: \"Loading Contract...\",\n        owner: null\n      };\n  \n    }\n    setLoaded() {\n      this.setState({\n        contractLoaded: true\n      })\n    }\n  \n    componentDidMount = async () => {\n      this.loadContract()\n    }\n  \n    async loadContract() {\n      try {\n\n        let symbol = await this.props.contract.symbol()\n        let name = await this.props.contract.name()\n        let owner = await this.props.contract.owner()\n        let supply = await this.props.contract.totalSupply()\n        let balance = await this.props.contract.balanceOf(window.ethereum.selectedAddress)\n        \n        let cap;\n        try {\n          cap = await this.props.contract.cap()\n        } catch (error) {\n          cap = \"no cap value set on contract\"\n        }\n\n  \n        console.log(supply.toString())\n        this.setState({ symbol, name, owner, supply: supply.toString(), balance: balance.toString(), cap: cap.toString() }, this.setLoaded)\n  \n      } catch (err) {\n        console.log(err)\n        this.setState({ loadingMessage: err.toString() })\n  \n      }\n    }\n  \n    render() {\n      if (!this.state.contractLoaded) {\n        return (<div>{this.state.loadingMessage}</div>)\n      }\n      return (\n        <div>\n          <label>Name:</label>\n          <span>{this.state.name}</span>\n          <br></br>\n          <label>Symbol:</label>\n          <span>{this.state.symbol}</span>\n          <br></br>\n          <label>Owner:</label>\n          <span>{this.state.owner}</span>\n          <br></br>\n          <label>Balance:</label>\n          <span>{this.state.balance}</span>\n          <br></br>\n          <label>Total Supply:</label>\n          <span>{this.state.supply}</span>\n          <br></br>\n          <label>Cap:</label>\n          <span>{this.state.cap}</span>\n          <br></br>\n        </div>\n      );\n    }\n  }\n\n  export default Token;","import {ethers} from 'ethers';\n\n\nexport const decodeLogs = (logs, contractEventsInterface) => {\n    let result = []\n    for (let i = 0; i < logs.length; i++) {\n        const log = logs[i];\n        let cleaned = {};\n        let decoded = contractEventsInterface.decode(\n            log.data,\n            log.topics\n        );\n        contractEventsInterface.inputs.forEach((input, i) => {\n            if (input.type.startsWith(\"uint\")) {\n                let x = decoded[input.name];\n                cleaned[input.name] = x.toString();\n            } else {\n                cleaned[input.name] = decoded[input.name];\n            }\n        });\n        log.decoded = cleaned;\n        result.push(decoded)\n    }\n    return result\n}\n\nexport const arrayify = ethers.utils.arrayify\n\nexport const isHexAddress = (address) => {\n    return /^0x[a-fA-F0-9]{40}$/.test(address)\n}\n\nexport const bigNumberify = ethers.utils.bigNumberify\n\nexport const compareHex = (a,b) => {\n    return (a.toLowerCase() === b.toLowerCase())\n}","import React, { Component } from \"react\";\nimport { isHexAddress } from \"../../../web3/web3Utils\";\n\nimport \"./index.css\"\nclass CreateForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            amount: null,\n            delegates: [],\n            metadata: null,\n            notOwner: false,\n            delegateFields: [],\n            delegateLength: 1,\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.addNewDelegateField = this.addNewDelegateField.bind(this);\n\n    }\n\n    async componentDidMount() {\n        //compare users address to owner, see if it matches\n        let ownerAddress = await this.props.contract.owner()\n        console.log(ownerAddress)\n\n        if (window.ethereum.selectedAddress.toLowerCase() !== ownerAddress.toLowerCase()) {\n            this.setState({ notOwner: true });\n        }\n    }\n\n    handleChange(event) {\n        console.log(this.state)\n\n        if (event.target.name === \"delegates\") {\n            let delegateFields = this.state.delegateFields\n            let i = event.target.id\n            delegateFields[i] = event.target.value\n            console.log(this.state)\n            this.setState({ delegateFields });\n\n        } else {\n            this.setState({ [event.target.name]: event.target.value });\n        }\n    }\n\n    addNewDelegateField() {\n        console.log(\"adding new delegate\")\n        let newFields = this.state.delegateFields\n        newFields.push(\"\")\n        this.setState({ delegateFields: newFields })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.submitTransaction()\n    }\n    submitTransaction = async () => {\n        const { amount, delegateFields, metadata } = this.state\n        try {\n            delegateFields.forEach((df,i) => {\n                if (!isHexAddress(df)) {\n                    throw new Error(\"Delegate Field \" + i + \" is not a valid address\")\n                }\n            })\n            //delegateFields.push(window.ethereum.selectedAddress)\n            await this.props.contract.createCertificateType(amount, delegateFields, metadata)\n            document.getElementById(this.props.id).reset();\n        } catch (err) {\n            alert(err.toString())\n        }\n\n    };\n\n\n    render() {\n        if (this.state.notOwner) {\n            return (<span className=\"form-warning\">You are not the owner of the contract {this.props.contract.address}</span>)\n        }\n        return (\n            <form id={this.props.id} onSubmit={this.handleSubmit}>\n                <br></br>\n                <label>\n                    Amount:\n            <input name=\"amount\" type=\"number\" onChange={this.handleChange} />\n                </label>\n                <br></br>\n\n                <label>\n                    Metadata:\n            <input name=\"metadata\" type=\"text\" onChange={this.handleChange} />\n                </label>\n                <br></br>\n                <label>\n                    Delegates:\n                 {this.state.delegateFields.map((d, fId) => {\n                     return (<div key={fId}><input id={fId} name=\"delegates\" type=\"text\" onChange={this.handleChange} /><br></br></div>)\n                 })}\n                </label>\n                <div className=\"add-delegate-div\" onClick={this.addNewDelegateField}>\n                    <span>+</span>\n                </div>\n                <br></br>\n                <input type=\"submit\" value=\"Submit\" disabled={this.state.notOwner} />\n            </form>\n        );\n    }\n}\nexport default CreateForm;","import React, { Component } from \"react\";\nimport { decodeLogs, arrayify } from \"../../../web3/web3Utils\";\n\nimport \"./index.css\"\nclass CreateForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            amount: null,\n            metadata: null,\n            notOwner: false,\n            recipient: null,\n            certificates: [],\n            selectedCertificateId: null,\n            signedCertificate: {},\n            isCertSigned: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.downloadCert = this.downloadCert.bind(this);\n\n    }\n\n    async componentDidMount() {\n\n        this.getLogs()\n\n        let ownerAddress = await this.props.contract.owner()\n\n        if (window.ethereum.selectedAddress.toLowerCase() !== ownerAddress.toLowerCase()) {\n            this.setState({ notOwner: true });\n        }\n    }\n\n    async getLogs() {\n        let filter = this.props.contract.filters.CertificateTypeCreated();\n        filter.fromBlock = 0\n\n        let logs = await this.props.provider.getLogs(filter)\n        let contractEventInterface = this.props.contract.interface.events['CertificateTypeCreated']\n        let decodedLogs = decodeLogs(logs, contractEventInterface)\n\n        console.log(\"decodedLogs\", decodedLogs)\n        let certificates = []\n        for (let i = 0; i < decodedLogs.length; i++) {\n            const log = decodedLogs[i];\n            let dataString = await this.props.contract.getCertificateData(log.id)\n            console.log(dataString, log.amount.toString())\n            let cert = { id: log.id, amount: log.amount.toString(), meta: dataString, delegates: log.delegates }\n            certificates.push(cert)\n        }\n        this.setState({ certificates })\n\n        this.getDelegateSelector()\n    }\n\n    handleChange(event) {\n        // console.log(\"event\",event.target.name, event.target.value)\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    addNewDelegateField() {\n        console.log(\"adding new delegate\")\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.submitTransaction()\n    }\n    submitTransaction = async () => {\n        if (this.state.selectedCertificateId) {\n            let cHash = await this.props.contract.getCertificateHash(this.state.selectedCertificateId, this.state.recipient)\n            const certHashBytes = arrayify(cHash);\n            let signature = await this.props.signer.signMessage(certHashBytes)\n            let signedCertificate = {\n                type: \"ERC20\",\n                signature, \n                address: this.props.contract.address, \n                recipient: this.state.recipient, \n                certificateId: this.state.selectedCertificateId \n            }\n            console.log(signedCertificate)\n            this.setState({signedCertificate, isCertSigned: true})\n        } else {\n            alert(\"No valid cert selected\")\n        }\n        document.getElementById(this.props.id).reset();\n    };\n\n    downloadCert() {\n        if (!this.state.isCertSigned) {\n            alert(\"cert not valid\")\n            return\n        }\n        const blob = new Blob([ JSON.stringify(this.state.signedCertificate) ], { type: 'application/json' });\n        const url = URL.createObjectURL(blob);\n\n        console.log(\"blob url\",url)\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = this.state.signedCertificate.certificateId || 'download';\n        a.click();\n    }\n\n    getDelegateSelector() {\n        const { certificates } = this.state\n        let selectorList = []\n        for (let i = 0; i < certificates.length; i++) {\n            const c = certificates[i];\n            let delegate = c.delegates.filter(d => d.toLowerCase() === window.ethereum.selectedAddress.toLowerCase())\n            if (delegate > 0) {\n                selectorList.push(c)\n            }\n        }\n        console.log(\"selectorList\", selectorList)\n\n        return (\n            <select name=\"selectedCertificateId\" onChange={this.handleChange}>\n                <option key={\"-1\"} value={\"\"}>Please select a certificate...</option>\n\n                {selectorList.map((cert, idx) => {\n                    if (cert) {\n                        return (\n                            <option key={idx} value={cert.id}>{cert.meta} - {cert.amount}</option>\n                        )\n                    } else return null\n\n                })}\n            </select>\n        );\n    }\n\n    displayCert() {\n\n    }\n\n\n\n    render() {\n        if (this.state.certificates.length === 0) {\n            return (<span className=\"form-warning\">You are not a delegate for any certificates on contract {this.props.contract.address}</span>)\n        }\n        return (\n            <div>\n                <form id={this.props.id} onSubmit={this.handleSubmit}>\n                    <label>\n                        Certificate:\n                    {this.getDelegateSelector()}\n                    </label>\n                    <br></br>\n\n                    <label>\n                        Recipient:\n                <input name=\"recipient\" type=\"text\" onChange={this.handleChange} />\n                    </label>\n                    <br></br>\n\n                    <input type=\"submit\" value=\"Create Certificate\" />\n                </form>\n                {\n                    this.state.isCertSigned ? <div><pre><code>{JSON.stringify(this.state.signedCertificate, 0, 2)}</code></pre><button onClick={this.downloadCert}>Download Certificate</button> </div>: null\n                }\n            </div>\n        );\n    }\n}\n\n\nexport default CreateForm;","import React, { Component } from 'react'\nimport './index.css'\n\nclass Dropzone extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { hightlight: false }\n    this.fileInputRef = React.createRef()\n\n    this.openFileDialog = this.openFileDialog.bind(this)\n    this.onFilesAdded = this.onFilesAdded.bind(this)\n    this.onDragOver = this.onDragOver.bind(this)\n    this.onDragLeave = this.onDragLeave.bind(this)\n    this.onDrop = this.onDrop.bind(this)\n  }\n\n  openFileDialog() {\n    if (this.props.disabled) return\n    this.fileInputRef.current.click()\n  }\n\n  onFilesAdded(evt) {\n      console.log(\"fac\")\n    if (this.props.disabled) return\n    this.setState({ addedhightlight: true })\n\n    const files = evt.target.files\n    console.log(files)\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files)\n      this.props.onFilesAdded(array)\n    }\n  }\n\n  onDragOver(evt) {\n    evt.preventDefault()\n\n    if (this.props.disabled) return\n\n    this.setState({ hightlight: true })\n  }\n\n  onDragLeave() {\n    this.setState({ hightlight: false })\n  }\n\n  onDrop(event) {\n    event.preventDefault()\n\n    if (this.props.disabled) return\n\n    this.setState({ addedhightlight: true })\n\n    const files = event.dataTransfer.files\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files)\n      this.props.onFilesAdded(array)\n    }\n    this.setState({ hightlight: false })\n  }\n\n  fileListToArray(list) {\n    const array = []\n    for (var i = 0; i < list.length; i++) {\n      array.push(list.item(i))\n    }\n    return array\n  }\n\n  render() {\n    return (\n      <div\n        className={`Dropzone ${this.state.hightlight ? 'Highlight' : ''}  ${this.state.addedhightlight ? 'Added-Highlight' : ''} `}\n        onDragOver={this.onDragOver}\n        onDragLeave={this.onDragLeave}\n        onDrop={this.onDrop}\n        onClick={this.openFileDialog}\n        style={{ cursor: this.props.disabled ? 'default' : 'pointer' }}\n      >\n        <input\n          ref={this.fileInputRef}\n          className=\"FileInput\"\n          type=\"file\"\n          onChange={this.onFilesAdded}\n        />\n        <img\n          alt=\"upload\"\n          className=\"Icon\"\n        //   src=\"/uploadIcon.svg\"\n        src={ this.state.addedhightlight ? '/uploadComplete.svg' : '/uploadIcon.svg'}\n        />\n        <span>Upload Files</span>\n      </div>\n    )\n  }\n}\n\nexport default Dropzone","import React, { Component } from \"react\";\nimport Dropzone from \"../../Dropzone\"\nclass CreateForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            amount: null,\n            certJson: {},\n            successfullyUploaded: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleFileDrop = this.handleFileDrop.bind(this);\n    }\n\n    async componentDidMount() {\n\n    }\n\n    handleChange(event) {\n        try {\n            if (event.target.name === \"certJsonTextArea\") {\n                const cert = JSON.parse(event.target.value)\n                //const { signature, address, recipient, certificateId } = cert\n                console.log(cert)\n                //todo patter match here\n            }\n            this.setState({ [event.target.name]: event.target.value });\n        } catch (err) {\n            console.log(err)\n        }\n\n\n    }\n\n    async handleFileDrop(files) {\n        console.log(files)\n        let file = files[0]\n        let s = await file.text()\n        console.log(s)\n        let json = JSON.parse(s)\n\n        this.setState({ certJsonTextArea: JSON.stringify(json, 0, 2) })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.submitTransaction()\n    }\n\n    submitTransaction = async () => {\n        const { certJsonTextArea } = this.state\n        const cert = JSON.parse(certJsonTextArea)\n        const { signature, certificateId } = cert\n\n        await this.props.contract.redeemCertificate(signature, certificateId)\n        document.getElementById(this.props.id).reset();\n    };\n\n\n    render() {\n        if (this.state.notOwner) {\n            return (<span className=\"form-warning\">You are not the owner of the contract {this.props.contract.address}</span>)\n        }\n        return (\n            <form id={this.props.id} onSubmit={this.handleSubmit}>\n                <Dropzone\n                    onFilesAdded={this.handleFileDrop}\n                    disabled={this.state.successfullyUploaded}\n                />\n                <label>\n                    Certificate JSON:\n                </label>\n                <br></br>\n                <textarea name=\"certJsonTextArea\" value={this.state.certJsonTextArea} rows=\"10\" cols=\"100\" onChange={this.handleChange} />\n\n                <br></br>\n                <input type=\"submit\" value=\"Redeem Certificate\" />\n            </form>\n        );\n    }\n}\nexport default CreateForm;","import React, { Component } from \"react\";\nimport { ethers } from 'ethers';\nimport { navigate } from \"@reach/router\"\n\nimport { getLocalStorageArray } from \"../../../utils/localStorage\"\nimport { isHexAddress } from \"../../../web3/web3Utils\";\n\n\nexport default class ChooseToken extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectorTokens: [],\n            coinABI: null,\n            selectorTokenChoice: null,\n            manualToken: \"\"\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.afterMount = this.afterMount.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    async componentDidMount() {\n        let abi = this.props.exampleCoin.interface.abi\n        this.setState({ coinABI: abi }, this.afterMount)\n    }\n\n    afterMount() {\n        this.addToken(this.props.exampleCoin.address)\n        let tokenAddressArray = getLocalStorageArray(\"CERTIFICATE_TOKEN_LIST\")\n        console.log(tokenAddressArray)\n        tokenAddressArray.forEach(t => {\n            this.addToken(t)\n        });\n    }\n\n    async addToken(address) {\n\n        let contract = new ethers.Contract(address, this.state.coinABI, this.props.provider);\n        let symbol = await contract.symbol()\n        let name = await contract.name()\n\n        let token = { address, name, symbol }\n        console.log(token)\n        this.setState({ selectorTokens: [...this.state.selectorTokens, token] })\n    }\n\n    handleChange(event) {\n        if (event.target.name === \"selectorTokenChoice\") {\n            this.setState({manualToken: \"\"})\n        }\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (!this.state.manualToken) {\n            if (isHexAddress(this.state.selectorTokenChoice)) {\n                navigate(`/${this.props.route}/${this.state.selectorTokenChoice}`);\n            } else {\n                alert(\"Please select a valid token from the list\")\n            }\n        } else {\n            if (isHexAddress(this.state.manualToken)) {\n                navigate(`/${this.props.route}/${this.state.manualToken}`);\n            }\n            alert(\"Invalid Token address\")\n        }\n    }\n\n    getSelector() {\n        const { selectorTokens } = this.state\n        return (\n            <select name=\"selectorTokenChoice\" onChange={this.handleChange}>\n                <option key={\"-1\"} value={\"\"}>Please select a token...</option>\n\n                {selectorTokens.map((token, idx) => {\n                    if (token) {\n                        return (\n                            <option key={idx} value={token.address}>{token.name} - {token.symbol} - {token.address}</option>\n                        )\n                    } else return null\n\n                })}\n            </select>\n        );\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h2>Token Finder</h2>\n                <form onSubmit={this.handleSubmit}>\n                    {this.getSelector()}\n                    <br></br>\n                    <span>OR</span>\n                    <br></br>\n                    <label>\n                        Add your own:\n                <input name=\"manualToken\" value={this.state.manualToken} type=\"text\" onChange={this.handleChange} />\n                    </label>\n                    <br></br>\n\n                    <input type=\"submit\" value=\"Go to Token\" />\n\n                </form>\n\n                <br></br>\n                <br></br>\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport { MyWeb3Consumer } from \"../../web3/EthersContext\"\nimport { ethers } from 'ethers';\nimport getContracts from \"../../web3/getContracts\";\nimport TokenMeta from \"../../components/TokenMeta\"\nimport CreateCertificateType from \"../../components/forms/CreateCertificateType\"\nimport CreateCertificate from \"../../components/forms/CreateCertificate\"\nimport RedeemCertificate from \"../../components/forms/RedeemCertificate\"\nimport ChooseToken from \"../../components/forms/ChooseToken\"\n\nimport \"./index.css\"\n\nclass Token extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      contract: null,\n      contractLoaded: false,\n      loadingMessage: \"\",\n      symbol: null,\n      name: null,\n      supply: null,\n      owner: null,\n      balance: null\n    };\n  }\n  setLoaded() {\n    this.setState({\n      contractLoaded: true\n    })\n  }\n\n  componentDidMount = async () => {\n    this.loadContract()\n  }\n\n  async loadContract() {\n    try {\n      console.log(\"loading contract\")\n      let provider = this.props.provider\n\n      let templateCode = await provider.getCode(this.props.templateAddress)\n      let code = await provider.getCode(this.props.tokenAddress)\n\n      let contracts = getContracts(this.props.networkId)\n      const exampleCoinJSON = contracts.exampleCoin\n\n      if (templateCode !== code) {\n        let loadingMessage = \"deployed contract code does not match example coin contract\"\n        throw loadingMessage;\n      }\n      let contract = new ethers.Contract(this.props.tokenAddress, exampleCoinJSON.abi, this.props.signer);\n      let owner = await contract.owner()\n\n      this.setState({ contract, owner }, this.setLoaded)\n    } catch (err) {\n      console.log(err)\n      this.setState({ loadingMessage: err.toString() })\n    }\n  }\n\n  render() {\n    if (!this.state.contract) {\n      return (<div>{this.state.loadingMessage}</div>)\n    }\n    return (\n      <div>\n        <div className=\"token-box-div\">\n          <h3>Token Data</h3>\n          <TokenMeta contract={this.state.contract} />\n        </div>\n        <div className=\"token-box-div\">\n          <h3>Create Certificate Type (admin only)</h3>\n          <CreateCertificateType id=\"create-cert-type-form\" contract={this.state.contract} />\n        </div>\n        <div className=\"token-box-div\">\n          <h3>Create Certificate (delegate only)</h3>\n          <CreateCertificate id=\"create-cert-form\" contract={this.state.contract} provider={this.props.provider} signer={this.props.signer} />\n        </div>\n        <div className=\"token-box-div\">\n          <h3>Redeem Certificate</h3>\n          <RedeemCertificate id=\"redeem-cert-form\" contract={this.state.contract} provider={this.props.provider} signer={this.props.signer} />\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nconst TokenConsumer = (props) => (\n  <MyWeb3Consumer>\n    {({ loaded, networkId, signer, provider, exampleCoinContract }) => {\n      if (!loaded) {\n        return (<div>Loading form</div>)\n      }\n      if (!props.tokenId) {\n        return <ChooseToken  exampleCoin={exampleCoinContract} provider={provider} route=\"token\" />\n      }\n      return (\n        <div className=\"token-page\">\n          <h1>Token Page</h1>\n          <Token tokenAddress={props.tokenId} templateAddress={exampleCoinContract.address} networkId={networkId} signer={signer} provider={provider} />\n        </div>\n      )\n    }}\n  </MyWeb3Consumer>\n);\n\n\nexport default TokenConsumer;","import React, { Component } from \"react\";\nimport { arrayify } from \"../../../web3/web3Utils\";\n\nimport \"./index.css\"\nclass CreateForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            amount: null,\n            metadata: null,\n            recipient: null,\n            certificates: [],\n            selectedCertificateId: null,\n            signedCertificate: {},\n            isCertSigned: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.downloadCert = this.downloadCert.bind(this);\n\n    }\n\n    async componentDidMount() {\n\n        let timeNonce = Date.now()\n\n        let tokenContract = this.props.tokenContract\n        let lockboxContract = this.props.lockboxContract\n        let approvedAmount = await tokenContract.allowance(window.ethereum.selectedAddress, lockboxContract.address)\n\n\n        this.setState({ timeNonce, approvedAmount, tokenAddress: tokenContract.address })\n    }\n\n    handleChange(event) {\n        // console.log(\"event\",event.target.name, event.target.value)\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    addNewDelegateField() {\n        console.log(\"adding new delegate\")\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.submitTransaction()\n    }\n    submitTransaction = async () => {\n        if (!this.state.approvedAmount.gt(this.state.amount)) {\n            await this.approveLockbox(this.state.amount)\n        }\n\n        let cHash = await this.props.lockboxContract.getCertificateHash(this.state.amount, this.state.recipient, window.ethereum.selectedAddress, this.state.tokenAddress, this.state.timeNonce)\n        const certHashBytes = arrayify(cHash);\n        let signature = await this.props.signer.signMessage(certHashBytes)\n        let signedCertificate = {\n            type: \"Lockbox\",\n            signature,\n            amount: this.state.amount,\n            tokenAddress: this.state.tokenAddress,\n            recipient: this.state.recipient,\n            signer: window.ethereum.selectedAddress,\n            nonce: this.state.timeNonce,\n        }\n        this.setState({ signedCertificate, isCertSigned: true })\n\n        document.getElementById(this.props.id).reset();\n    };\n\n    async approveLockbox(amt) {\n        await this.props.tokenContract.approve(this.props.lockboxContract.address, amt)\n    }\n\n\n    downloadCert() {\n        if (!this.state.isCertSigned) {\n            alert(\"cert not valid\")\n            return\n        }\n        const blob = new Blob([JSON.stringify(this.state.signedCertificate)], { type: 'application/json' });\n        const url = URL.createObjectURL(blob);\n\n        console.log(\"blob url\", url)\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = this.state.signedCertificate.type + \"-\" + this.state.signedCertificate.nonce || 'download';\n        a.click();\n    }\n\n\n\n\n    render() {\n        return (\n            <div>\n                <form id={this.props.id} onSubmit={this.handleSubmit}>\n                    <label>\n                        <span>Recipient:</span>\n                        <input name=\"recipient\" type=\"text\" onChange={this.handleChange} />\n                    </label>\n                    <br></br>\n                    <label>\n                        <span>Amount:</span>\n                        <input name=\"amount\" type=\"number\" onChange={this.handleChange} />\n                    </label>\n                    <br></br>\n                    <input type=\"submit\" value=\"Create Certificate\" />\n                </form>\n                {\n                    this.state.isCertSigned ? <div><pre><code>{JSON.stringify(this.state.signedCertificate, 0, 2)}</code></pre><button onClick={this.downloadCert}>Download Certificate</button> </div> : null\n                }\n            </div>\n        );\n    }\n}\n\n\nexport default CreateForm;","import React, { Component } from \"react\";\nimport { bigNumberify, compareHex } from \"../../../web3/web3Utils\"\nimport Dropzone from \"../../Dropzone\"\nclass CreateForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            amount: null,\n            certJson: {},\n            successfullyUploaded: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleFileDrop = this.handleFileDrop.bind(this);\n    }\n\n    async componentDidMount() {\n\n    }\n\n    handleChange(event) {\n        try {\n            if (event.target.name === \"certJsonTextArea\") {\n                const cert = JSON.parse(event.target.value)\n                //const { signature, address, recipient, certificateId } = cert\n                console.log(cert)\n                //todo patter match here\n            }\n            this.setState({ [event.target.name]: event.target.value });\n        } catch (err) {\n            console.log(err)\n        }\n\n\n    }\n\n    async handleFileDrop(files) {\n        console.log(files)\n        let file = files[0]\n        let s = await file.text()\n        console.log(s)\n        let json = JSON.parse(s)\n\n        this.setState({ certJsonTextArea: JSON.stringify(json, 0, 2) })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const { certJsonTextArea } = this.state\n        const cert = JSON.parse(certJsonTextArea)\n        const {type} = cert\n        if (type.toLowerCase() === \"lockbox\") {\n            this.submitLockboxTransaction()\n        } else if (type.toLowerCase() === \"erc20\") {\n            this.submitTransaction()\n        } else {\n            alert(\"Invalid type value\")\n        }\n    }\n\n    submitERC20Transaction = async () => {\n        const { certJsonTextArea } = this.state\n        const cert = JSON.parse(certJsonTextArea)\n        const { signature, certificateId } = cert\n\n        await this.props.contract.redeemCertificate(signature, certificateId)\n        document.getElementById(this.props.id).reset();\n    };\n\n    submitLockboxTransaction = async () => {\n        const { certJsonTextArea } = this.state\n        const cert = JSON.parse(certJsonTextArea)\n        const { signature, tokenAddress, amount, recipient, signer, nonce } = cert\n        let bnAmount = bigNumberify(amount)\n        if (!compareHex(recipient, window.ethereum.selectedAddress)) {\n            alert(\"Recipient address does not match your address\")\n        } else {\n            await this.props.lockboxContract.redeem(signer, tokenAddress, bnAmount, nonce, signature)\n            document.getElementById(this.props.id).reset();\n        }\n\n    };\n\n    render() {\n        return (\n            <form id={this.props.id} onSubmit={this.handleSubmit}>\n                <Dropzone\n                    onFilesAdded={this.handleFileDrop}\n                    disabled={this.state.successfullyUploaded}\n                />\n                <label>\n                    Certificate JSON:\n                </label>\n                <br></br>\n                <textarea name=\"certJsonTextArea\" value={this.state.certJsonTextArea} rows=\"10\" cols=\"100\" onChange={this.handleChange} />\n\n                <br></br>\n                <input type=\"submit\" value=\"Redeem Certificate\" />\n            </form>\n        );\n    }\n}\nexport default CreateForm;","import React, { Component } from \"react\";\nimport { MyWeb3Consumer } from \"../../web3/EthersContext\"\nimport { ethers } from 'ethers';\nimport getContracts from \"../../web3/getContracts\";\nimport TokenMeta from \"../../components/TokenMeta\"\n\nimport CreateLockboxCertificate from \"../../components/forms/CreateLockboxCertificate\"\n\nimport RedeemLockboxCertificate from \"../../components/forms/RedeemLockboxCertificate\"\nimport ChooseToken from \"../../components/forms/ChooseToken\"\n\nimport \"./index.css\"\n\nclass Lockbox extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      contract: null,\n      contractLoaded: false,\n      loadingMessage: \"\",\n      symbol: null,\n      name: null,\n      supply: null,\n      owner: null,\n      balance: null\n    };\n  }\n  setLoaded() {\n    this.setState({\n      contractLoaded: true\n    })\n  }\n\n  componentDidMount = async () => {\n    this.loadContract()\n  }\n\n  async loadContract() {\n    try {\n      console.log(\"loading contract\")\n\n      let contracts = getContracts(this.props.networkId)\n      const exampleCoinJSON = contracts.exampleCoin\n\n      let contract = new ethers.Contract(this.props.tokenAddress, exampleCoinJSON.abi, this.props.signer);\n\n      this.setState({ contract }, this.setLoaded)\n    } catch (err) {\n      console.log(err)\n      this.setState({ loadingMessage: err.toString() })\n    }\n  }\n\n\nrender() {\n  if (!this.state.contract) {\n    return (<div>{this.state.loadingMessage}</div>)\n  }\n  return (\n    <div>\n      <div className=\"lockbox-box-div\">\n        <h3>Token Data</h3>\n        <TokenMeta contract={this.state.contract} />\n      </div>\n      <div className=\"lockbox-box-div\">\n        <h3>Create Lockbox Certificate</h3>\n        <CreateLockboxCertificate id=\"create-cert-form\" tokenContract={this.state.contract} lockboxContract={this.props.lockboxContract} provider={this.props.provider} signer={this.props.signer} />\n      </div>\n      <div className=\"lockbox-box-div\">\n        <h3>Redeem Certificate</h3>\n        <RedeemLockboxCertificate id=\"redeem-cert-form\" contract={this.state.contract} lockboxContract={this.props.lockboxContract} provider={this.props.provider} signer={this.props.signer} />\n      </div>\n    </div>\n  );\n}\n}\n\nconst TokenConsumer = (props) => (\n  <MyWeb3Consumer>\n    {({ loaded, networkId, signer, provider, exampleCoinContract, lockboxContract }) => {\n      if (!loaded) {\n        return (<div>Loading form</div>)\n      }\n      if (!props.tokenId) {\n        return <ChooseToken  exampleCoin={exampleCoinContract} provider={provider} route=\"lockbox\"/>\n      }\n      return (\n        <div className=\"token-page\">\n          <h1>Token Page</h1>\n          <Lockbox tokenAddress={props.tokenId} templateAddress={exampleCoinContract.address} networkId={networkId} signer={signer} provider={provider} lockboxContract={lockboxContract}/>\n        </div>\n      )\n    }}\n  </MyWeb3Consumer>\n);\n\n\nexport default TokenConsumer;","import React from 'react';\nimport Header from './layout/Header';\nimport Footer from './layout/Footer';\n\nimport './App.css';\nimport { Router } from \"@reach/router\"\n\nimport Home from \"./pages/Home\"\nimport TokenList from \"./pages/TokenList\"\nimport Deploy from \"./pages/Deploy\"\nimport TokenPage from \"./pages/Token\"\nimport LockboxPage from \"./pages/Lockbox\"\nimport { MyWeb3Provider } from \"./web3/EthersContext\"\n\n \nfunction App() {\n  return (\n    <div className=\"app-class\">\n\n      <MyWeb3Provider>\n        <Header />\n        <Router>\n          <Home path=\"/\" />\n          <TokenList path=\"/list\" />\n          <Deploy path=\"/deploy\" />\n          <TokenPage path=\"/token\" />\n          <TokenPage path=\"/token/:tokenId\" />\n          <LockboxPage path=\"/lockbox\" />\n          <LockboxPage path=\"/lockbox/:tokenId\" />\n        </Router>\n        <Footer />\n      </MyWeb3Provider>\n\n    </div>\n\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}